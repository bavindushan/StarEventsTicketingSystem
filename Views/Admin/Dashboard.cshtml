@model IEnumerable<StarEventsTicketingSystem.Models.AuditLog>

@{
    ViewData["Title"] = "Admin Dashboard";
}

<!-- Navbar -->
<nav class="navbar navbar-expand-lg navbar-dark admin-navbar shadow-lg">
    <div class="container-fluid">
        <a class="navbar-brand fw-bold text-white" asp-controller="Admin" asp-action="Dashboard">
            Admin Panel
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#adminNav" aria-controls="adminNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="adminNav">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item">
                    <a class="nav-link text-white" asp-controller="Admin" asp-action="Dashboard"><i class="bi bi-speedometer2 me-1"></i> Dashboard</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link text-white" asp-controller="Admin" asp-action="ManageEvents"><i class="bi bi-calendar-event me-1"></i> Manage Events</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link text-white" asp-controller="Admin" asp-action="ManageVenues"><i class="bi bi-building me-1"></i> Manage Venues</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link text-white" asp-controller="Admin" asp-action="ManageUsers"><i class="bi bi-people me-1"></i> Manage Users</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link text-white" asp-controller="Admin" asp-action="Reports"><i class="bi bi-graph-up-arrow me-1"></i> Reports</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link text-white" asp-controller="Admin" asp-action="Settings"><i class="bi bi-gear me-1"></i> Settings</a>
                </li>
            </ul>
            <form method="post" asp-controller="Account" asp-action="Logout" class="d-flex">
                <button type="submit" class="btn btn-danger rounded-3 fw-semibold">
                    <i class="bi bi-box-arrow-right me-1"></i> Logout
                </button>
            </form>
        </div>
    </div>
</nav>

<!-- Main Content -->
<div class="container-fluid p-4">

    <!-- Quick Stats -->
    <div class="row mb-4 g-4">
        <div class="col-md-3">
            <div class="stat-card glassy-card text-center p-3 shadow-lg">
                <i class="bi bi-people fs-2 text-primary"></i>
                <h6 class="mt-2 text-warning">Users</h6>
                <h4 class="fw-bold counter" data-target="@ViewBag.TotalUsers">0</h4>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stat-card glassy-card text-center p-3 shadow-lg">
                <i class="bi bi-calendar-check fs-2 text-success"></i>
                <h6 class="mt-2 text-warning">Events</h6>
                <h4 class="fw-bold counter" data-target="@ViewBag.TotalEvents">0</h4>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stat-card glassy-card text-center p-3 shadow-lg">
                <i class="bi bi-ticket-perforated fs-2 text-warning"></i>
                <h6 class="mt-2 text-warning">Tickets</h6>
                <h4 class="fw-bold counter" data-target="@ViewBag.TotalTickets">0</h4>
            </div>
        </div>
        <div class="col-md-3">
            <div class="stat-card glassy-card text-center p-3 shadow-lg">
                <i class="bi bi-cart-check fs-2 text-danger"></i>
                <h6 class="mt-2 text-warning">Bookings</h6>
                <h4 class="fw-bold counter" data-target="@ViewBag.TotalBookings">0</h4>
            </div>
        </div>
    </div>

    <!-- Audit Logs -->
    <div class="card shadow-lg border-0 rounded-4 glassy-card">
        <div class="card-header d-flex justify-content-between align-items-center bg-gradient text-white rounded-top-4">
            <h5 class="mb-0"><i class="bi bi-journal-text me-2"></i> Audit Logs</h5>
            <div>
                <input type="date" id="filterDate" class="form-control d-inline-block rounded-3" style="width:auto;" />
                <button class="btn btn-sm btn-primary ms-2 rounded-3" onclick="filterLogs()">Filter</button>
                <button class="btn btn-sm btn-danger ms-2 rounded-3" onclick="downloadPDF()">Download PDF</button>
            </div>
        </div>
        <div class="card-body table-responsive glassy-table shadow-lg">
            <table id="auditLogTable" class="table table-hover align-middle table mb-0 text-white">
                <thead class="table-light">
                    <tr>
                        <th>Date</th>
                        <th>User</th>
                        <th>Action</th>
                        <th>Details</th>
                    </tr>
                </thead>
                <tbody id="auditLogBody">
                    @if (Model != null && Model.Any())
                    {
                        foreach (var log in Model)
                        {
                            <tr>
                                <td>@log.Timestamp.ToString("yyyy-MM-dd HH:mm")</td>
                                <td>@log.UserID</td>
                                <td>@log.Action</td>
                                <td>@log.Details</td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="4" class="text-center text-muted">No audit logs available.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Styles -->
<style>
    /* Navbar */
    .admin-navbar {
        background: rgba(255,255,255,0.08);
        backdrop-filter: blur(8px);
    }

        .admin-navbar .nav-link {
            font-weight: 500;
            transition: 0.3s;
        }

            .admin-navbar .nav-link:hover {
                background: rgba(255, 255, 255, 0.2);
                border-radius: 8px;
                transform: translateY(-2px);
            }

    /* Glassy Cards */
    .glassy-card {
        background: rgba(255, 255, 255, 0.2);
        backdrop-filter: blur(12px);
        border: none;
        border-radius: 1rem;
        transition: transform 0.3s ease;
        color:aliceblue;
    }

        .glassy-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
        }

    .stat-card h4 {
        margin: 0;
        font-size: 2rem;
    }

    .card-header.bg-gradient {
        background: linear-gradient(135deg, #667eea, #764ba2);
    }

    /* Glassy Table */
    .glassy-table {
        background: rgba(255, 255, 255, 0.12);
        backdrop-filter: blur(10px);
        border-radius: 12px;
        overflow: hidden;
        color: #fff;
    }

        .glassy-table thead {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: #fff;
        }

        .glassy-table th,
        .glassy-table td {
            padding: 1rem;
            vertical-align: middle;
        }

        .glassy-table tbody tr:hover {
            background: rgba(255, 255, 255, 0.15);
            transition: 0.3s;
        }

</style>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf-autotable/3.5.28/jspdf.plugin.autotable.min.js"></script>

    <script>
        // Counter animation
        function animateCounters() {
            const counters = document.querySelectorAll(".counter");
            counters.forEach(counter => {
                const target = +counter.getAttribute("data-target");
                const speed = 200; // smaller = faster

                let count = 0;
                const updateCount = () => {
                    if (count < target) {
                        count += Math.ceil(target / 100);
                        counter.innerText = count > target ? target : count;
                        setTimeout(updateCount, speed);
                    } else {
                        counter.innerText = target;
                    }
                };
                updateCount();
            });
        }

        // Run animation when counters are visible
        const observer = new IntersectionObserver(entries => {
            entries.forEach(entry => {
                if (entry.isIntersecting) {
                    animateCounters();
                    observer.disconnect(); // run once
                }
            });
        });

        document.querySelectorAll(".counter").forEach(el => observer.observe(el));

        // Audit Log Filters
        async function filterLogs() {
            const date = document.getElementById("filterDate").value;
            if (!date) {
                Swal.fire("Select a date first!", "", "warning");
                return;
            }

            try {
                const response = await fetch(`/Admin/FilterAuditLogs?date=${date}`);
                if (!response.ok) throw new Error("Failed to fetch logs");

                const logs = await response.json();
                const tbody = document.getElementById("auditLogBody");
                tbody.innerHTML = "";

                if (logs.length > 0) {
                    logs.forEach(log => {
                        const row = `
                            <tr>
                                <td>${new Date(log.timestamp).toLocaleString()}</td>
                                <td>${log.userID}</td>
                                <td>${log.action}</td>
                                <td>${log.details}</td>
                            </tr>`;
                        tbody.innerHTML += row;
                    });
                } else {
                    tbody.innerHTML = `<tr><td colspan="4" class="text-center text-muted">No logs found for ${date}</td></tr>`;
                }
            } catch (err) {
                Swal.fire("Error fetching logs", err.message, "error");
            }
        }

        function downloadPDF() {
            const { jsPDF } = window.jspdf;
            const doc = new jsPDF();
            doc.text("Audit Logs Report", 14, 10);
            doc.autoTable({ html: "#auditLogTable" });
            doc.save("AuditLogs.pdf");
        }
    </script>
}

@model IEnumerable<StarEventsTicketingSystem.Models.Event>
@using StarEventsTicketingSystem.Enums
@{
    ViewData["Title"] = "Manage Events";
    var categories = ViewBag.Categories as List<EventCategory>;
    var eventNames = ViewBag.EventNames as List<string>;
    var locations = ViewBag.Locations as List<string>;
    var venues = ViewBag.Venues as List<StarEventsTicketingSystem.Models.Venue>;
}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" />
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<!-- Styles -->
<style>
    /* Navbar */
    .admin-navbar {
        background: rgba(255, 255, 255, 0.08);
        backdrop-filter: blur(8px);
    }

        .admin-navbar .nav-link {
            font-weight: 500;
            transition: 0.3s;
        }

            .admin-navbar .nav-link:hover {
                background: rgba(255, 255, 255, 0.2);
                border-radius: 8px;
                transform: translateY(-2px);
            }

    /* Glassy Cards */
    .glassy-card {
        background: rgba(255, 255, 255, 0.2);
        backdrop-filter: blur(12px);
        border: none;
        border-radius: 1rem;
        transition: transform 0.3s ease;
        color: #fff;
    }

        .glassy-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
        }

    /* Glassy Table */
    .glassy-table {
        background: rgba(255, 255, 255, 0.12);
        backdrop-filter: blur(10px);
        border-radius: 12px;
        overflow: hidden;
        color: #fff;
    }

        .glassy-table thead {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: #fff;
        }

        .glassy-table th,
        .glassy-table td {
            padding: 1rem;
            vertical-align: middle;
        }

        .glassy-table tbody tr:hover {
            background: rgba(255, 255, 255, 0.15);
            transition: 0.3s;
        }
</style>

<!-- Navbar -->
<nav class="navbar navbar-expand-lg navbar-dark admin-navbar shadow-lg">
    <div class="container-fluid">
        <a class="navbar-brand fw-bold text-white" asp-controller="OrganizerDashboard" asp-action="Index">
            Organizer Panel
        </a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#organizerNav" aria-controls="organizerNav" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="organizerNav">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item mb-2">
                    <a class="nav-link text-white" asp-controller="OrganizerDashboard" asp-action="Index">Dashboard</a>
                </li>
                <li class="nav-item mb-2">
                    <a class="nav-link text-white" asp-controller="OrganizerDashboard" asp-action="Events">Manage Events</a>
                </li>
                <li class="nav-item mb-2">
                    <a class="nav-link text-white" asp-controller="OrganizerDashboard" asp-action="Sales">Sales & Revenue</a>
                </li>
                <li class="nav-item mb-2">
                    <a class="nav-link text-white" asp-controller="OrganizerDashboard" asp-action="Profile">Profile</a>
                </li>
            </ul>
            <form method="post" asp-controller="Account" asp-action="Logout" class="d-flex">
                <button type="submit" class="btn btn-danger rounded-3 fw-semibold">
                    <i class="bi bi-box-arrow-right me-1"></i> Logout
                </button>
            </form>
        </div>
    </div>
</nav>

<div class="container mt-4">
    <h2 class="text-center text-warning mb-3">Manage My Events</h2>

    <!-- Filters -->
    <form method="get" class="row mb-4">
        <div class="col-md-3">
            <lable class="text-warning">select event</lable>
            <select name="searchName" class="form-control">
                <option value="">-- Select Event --</option>
                @foreach (var name in eventNames)
                {
                    <option value="@name">@name</option>
                }
            </select>
        </div>
        <div class="col-md-3">
            <lable class="text-warning">select location</lable>
            <select name="location" class="form-control">
                <option value="">-- Select Location --</option>
                @foreach (var loc in locations)
                {
                    <option value="@loc">@loc</option>
                }
            </select>
        </div>
        <div class="col-md-2">
            <lable class="text-warning">select category</lable>
            <select name="category" class="form-control">
                <option value="">-- Select Category --</option>
                @foreach (var cat in categories)
                {
                    <option value="@cat">@cat</option>
                }
            </select>
        </div>
        <div class="col-md-2">
            <lable class="text-warning">select date</lable>
            <input type="date" name="date" class="form-control" />
        </div>
        <div class="col-md-2 mt-4">
            <button type="submit" class="btn btn-primary w-100">Filter</button>
        </div>
        <div class="col-md-2 mt-3">
            <button type="button" class="btn btn-success w-100" data-bs-toggle="modal" data-bs-target="#createEventModal">
                + Create Event
            </button>
        </div>
    </form>

    <!-- Event Cards -->
    <div class="row">
        @foreach (var ev in Model)
        {
            <div class="col-md-4 mb-3">
                <div class="card shadow-sm glassy-card">
                    <div class="card-body">
                        <h5 class="text-center">@ev.EventName</h5>
                        <p><b>Date:</b> @ev.Date.ToShortDateString()</p>
                        <p><b>Location:</b> @ev.Location</p>
                        <p><b>Category:</b> @ev.Category</p>
                        <p><b>Ticket Price:</b> $@ev.TicketPrice</p>
                        <p><b>Discounts:</b> @(ev.Discounts.Any() ? string.Join(", ", ev.Discounts.Select(d => d.DiscountPercentage + "%")) : "0%")</p>
                        <button class="btn btn-sm btn-warning"
                                onclick='openEditModal(
                                    @ev.EventID,
                                    @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ev.EventName)),
                                    @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ev.Location)),
                                    @Html.Raw(System.Text.Json.JsonSerializer.Serialize(((int)ev.Category).ToString())),
                                    @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ev.Date.ToString("yyyy-MM-dd"))),
                                    @Html.Raw(System.Text.Json.JsonSerializer.Serialize(ev.Description)),
                                    @ev.TicketPrice
                                )'>
                            Edit
                        </button>

                        <button class="btn btn-sm btn-danger" onclick="deleteEvent(@ev.EventID)">Delete</button>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<!-- Create Event Modal -->
<div class="modal fade" id="createEventModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <form id="createEventForm">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Create Event</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <!-- Venue -->
                    <div class="mb-3">
                        <label>Venue</label>
                        <select name="VenueID" class="form-control" required>
                            <option value="">-- Select Venue --</option>
                            @foreach (var v in venues)
                            {
                                <option value="@v.VenueID">@v.VenueName</option>
                            }
                        </select>
                    </div>

                    <!-- Event Name -->
                    <div class="mb-3">
                        <label>Name</label>
                        <input type="text" name="EventName" class="form-control" required />
                    </div>

                    <!-- Category -->
                    <div class="mb-3">
                        <label>Category</label>
                        <select name="Category" class="form-control" required>
                            @foreach (var cat in categories)
                            {
                                <option value="@( (int)cat )">@cat</option>
                            }
                        </select>
                    </div>

                    <!-- Location -->
                    <div class="mb-3">
                        <label>Location</label>
                        <select name="Location" class="form-control" required>
                            @foreach (var loc in locations)
                            {
                                <option value="@loc">@loc</option>
                            }
                        </select>
                    </div>

                    <!-- Date -->
                    <div class="mb-3">
                        <label>Date</label>
                        <input type="date" name="Date" class="form-control" required />
                    </div>

                    <!-- Ticket Price -->
                    <div class="mb-3">
                        <label>Ticket Price</label>
                        <input type="number" step="0.01" name="TicketPrice" class="form-control" required />
                    </div>

                    <!-- Description -->
                    <div class="mb-3">
                        <label>Description</label>
                        <textarea name="Description" class="form-control" required></textarea>
                    </div>

                    <!-- Discount Details (Optional) -->
                    <div class="mb-3">
                        <label>Discount Code (Optional)</label>
                        <input type="text" name="DiscountCode" class="form-control" />
                    </div>
                    <div class="mb-3">
                        <label>Discount % (Optional)</label>
                        <input type="number" step="0.01" name="DiscountPercentage" class="form-control" />
                    </div>
                    <div class="mb-3">
                        <label>Discount Start Date (Optional)</label>
                        <input type="date" name="DiscountStartDate" class="form-control" />
                    </div>
                    <div class="mb-3">
                        <label>Discount End Date (Optional)</label>
                        <input type="date" name="DiscountEndDate" class="form-control" />
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success">Create</button>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Edit Modal -->
<div class="modal fade" id="editEventModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <form id="editEventForm">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Edit Event</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="editEventId" name="EventID" />

                    <div class="mb-3">
                        <label>Name</label>
                        <input type="text" id="editName" name="EventName" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label>Category</label>
                        <select id="editCategory" name="Category" class="form-control">
                            @foreach (var cat in categories)
                            {
                                <option value="@( (int)cat )">@cat</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label>Location</label>
                        <select id="editLocation" name="Location" class="form-control">
                            @foreach (var loc in locations)
                            {
                                <option value="@loc">@loc</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label>Date</label>
                        <input type="date" id="editDate" name="Date" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label>Ticket Price</label>
                        <input type="number" id="editTicketPrice" name="TicketPrice" step="0.01" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label>Description</label>
                        <textarea id="editDescription" name="Description" class="form-control" required></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success">Save Changes</button>
                </div>
            </div>
        </form>
    </div>
</div>

<script>
    function openEditModal(id, name, location, category, date, description, price) {
        document.getElementById("editEventId").value = id;
        document.getElementById("editName").value = name;
        document.getElementById("editLocation").value = location;
        document.getElementById("editCategory").value = category;
        document.getElementById("editDate").value = date;
        document.getElementById("editDescription").value = description;
        document.getElementById("editTicketPrice").value = price;
        new bootstrap.Modal(document.getElementById('editEventModal')).show();
    }

    function deleteEvent(id) {
        Swal.fire({
            title: "Are you sure?",
            text: "You won't be able to revert this!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonText: "Yes, delete it!"
        }).then((result) => {
            if (result.isConfirmed) {
                fetch('/OrganizerDashboard/DeleteEvent', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ EventID: id })
                }).then(res => res.json()).then(data => {
                    if (data.success) {
                        Swal.fire("Deleted!", "Event has been deleted.", "success").then(() => location.reload());
                    } else {
                        Swal.fire("Error!", data.message, "error");
                    }
                });
            }
        });
    }

    document.getElementById("editEventForm").addEventListener("submit", function (e) {
        e.preventDefault();
        const obj = Object.fromEntries(new FormData(this).entries());
        obj.EventID = parseInt(obj.EventID);
        obj.TicketPrice = parseFloat(obj.TicketPrice);
        obj.Category = parseInt(obj.Category);

        fetch('/OrganizerDashboard/EditEvent', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(obj)
        })
        .then(res => res.json())
        .then(data => {
            if (data.success) {
                Swal.fire("Updated!", "Event has been updated successfully.", "success").then(() => location.reload());
            } else {
                Swal.fire("Error!", data.message, "error");
            }
        })
        .catch(err => Swal.fire("Error!", "Something went wrong.", "error"));
    });

    document.getElementById("createEventForm").addEventListener("submit", function (e) {
        e.preventDefault();
        const obj = Object.fromEntries(new FormData(this).entries());
        obj.TicketPrice = parseFloat(obj.TicketPrice);
        obj.Category = parseInt(obj.Category);

        // Optional fields
        obj.DiscountPercentage = obj.DiscountPercentage ? parseFloat(obj.DiscountPercentage) : null;
        obj.DiscountStartDate = obj.DiscountStartDate || null;
        obj.DiscountEndDate = obj.DiscountEndDate || null;

        if (!obj.VenueID || !obj.EventName || obj.Category == null || !obj.Location || !obj.Date || !obj.TicketPrice) {
            Swal.fire("Error!", "Please fill in all required fields.", "error");
            return;
        }

        fetch('/OrganizerDashboard/CreateEvent', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(obj)
        })
        .then(res => res.json())
        .then(data => {
            if (data.success) {
                Swal.fire("Created!", "Event has been created successfully.", "success").then(() => location.reload());
            } else {
                Swal.fire("Error!", data.message, "error");
            }
        })
        .catch(err => Swal.fire("Error!", "Something went wrong.", "error"));
    });
</script>


@model StarEventsTicketingSystem.Models.Event

@{
    ViewData["Title"] = "Event Details";
}

<!-- Styles -->
<style>
    /* Navbar */
    .admin-navbar {
        background: rgba(255, 255, 255, 0.08);
        backdrop-filter: blur(8px);
    }

        .admin-navbar .nav-link {
            font-weight: 500;
            transition: 0.3s;
        }

            .admin-navbar .nav-link:hover {
                background: rgba(255, 255, 255, 0.2);
                border-radius: 8px;
                transform: translateY(-2px);
            }

    /* Glassy Cards */
    .glassy-card {
        background: rgba(255, 255, 255, 0.2);
        backdrop-filter: blur(12px);
        border: none;
        border-radius: 1rem;
        transition: transform 0.3s ease;
        color: aliceblue;
    }

        .glassy-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 20px rgba(0, 0, 0, 0.15);
        }

    .card-header.bg-gradient {
        background: linear-gradient(135deg, #667eea, #764ba2);
    }
</style>

<div class="container py-5 glassy-card">
    <h2>@Model.EventName</h2>
    <hr />

    <div class="row">
        <div class="col-md-8">
            <p><strong>Category:</strong> @Model.Category</p>
            <p><strong>Date:</strong> @Model.Date.ToString("dddd, dd MMMM yyyy")</p>
            <p><strong>Location:</strong> @Model.Location</p>
            <p><strong>Venue:</strong> @(Model.Venue != null ? Model.Venue.VenueName : "Not specified")</p>
            <p><strong>Capacity:</strong> @(Model.Venue != null ? Model.Venue.Capacity : 0)</p>
            <p><strong>Description:</strong> @Model.Description</p>
            <p><strong>Ticket Price:</strong> USD @Model.TicketPrice.ToString("N2")</p>
            <p><strong>Available Tickets:</strong> @(ViewBag.AvailableTickets ?? 0)</p>
        </div>

        <div class="col-md-4">
            <h4 class="text-warning">Book Tickets</h4>
            <button id="btnBookNow"
                    class="btn btn-primary w-100"
                    data-eventid="@Model.EventID"
            @((ViewBag.AvailableTickets ?? 0) == 0 ? "disabled" : "")>
                Book Now
            </button>
        </div>
    </div>
</div>

<!-- Booking Modal -->
<div class="modal fade" id="bookingModal" tabindex="-1" aria-labelledby="bookingModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="bookingModalLabel">Book Tickets</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="bookingForm">
                    <input type="hidden" id="EventID" value="@Model.EventID" />

                    <div class="mb-3">
                        <label for="Quantity" class="form-label">Quantity</label>
                        <input type="number" class="form-control" id="Quantity"
                               min="1"
                               max="@(ViewBag.AvailableTickets ?? 1)"
                               value="1" required />
                    </div>

                    <div class="mb-3">
                        <label for="DiscountCode" class="form-label">Discount Code</label>
                        <div class="input-group">
                            <input type="text" id="DiscountCode" class="form-control" placeholder="Enter discount code" />
                            <button type="button" id="btnApplyDiscount" class="btn btn-outline-primary">Try Discount</button>
                        </div>
                        <div id="discountMessage" class="mt-2"></div>
                    </div>

                    <p><strong>Ticket Price:</strong> USD @Model.TicketPrice.ToString("N2")</p>
                    <p><strong>Total Amount:</strong> USD <span id="totalAmount">@Model.TicketPrice.ToString("N2")</span></p>

                    <!-- Loyalty Points Alert -->
                    @if (ViewBag.LoyaltyPoints != null)
                    {
                        <div class="alert alert-info">
                            You currently have <strong>@ViewBag.LoyaltyPoints</strong> loyalty points!
                            <br /> (You’ll earn +1 more point after this payment.)
                        </div>
                    }

                    <button type="submit" class="btn btn-success w-100"
                    @((ViewBag.AvailableTickets ?? 0) == 0 ? "disabled" : "")>
                        Confirm & Pay Online
                    </button>
                </form>

                <hr />
                <h6>Your Previous Bookings for this Event</h6>
                <ul>
                    @if (ViewBag.UserBookings != null && ViewBag.UserBookings.Count > 0)
                    {
                        foreach (var b in ViewBag.UserBookings)
                        {
                            <li>
                                Booking Date: @b.BookingDate.ToString("dd MMM yyyy"),
                                Tickets: @b.TicketCount,
                                Total Amount: USD @b.TotalAmount.ToString("N2")
                            </li>
                        }
                        <p><strong>Total Amount for all bookings:</strong> USD @ViewBag.UserTotalAmount.ToString("N2")</p>
                    }
                    else
                    {
                        <li>No previous bookings.</li>
                    }
                </ul>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://js.stripe.com/v3/"></script>
    <script>
        const bookNowBtn = document.getElementById('btnBookNow');
        const bookingModal = new bootstrap.Modal(document.getElementById('bookingModal'));

        bookNowBtn.addEventListener('click', () => bookingModal.show());

        const ticketPrice = @Model.TicketPrice;
        const quantityInput = document.getElementById('Quantity');
        const totalAmountSpan = document.getElementById('totalAmount');

        quantityInput.addEventListener('input', () => {
            let qty = parseInt(quantityInput.value) || 1;
            const maxTickets = @(ViewBag.AvailableTickets ?? 0);
            if (qty > maxTickets) qty = maxTickets;
            if (qty < 1) qty = 1;
            quantityInput.value = qty;
            totalAmountSpan.textContent = (ticketPrice * qty).toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
        });

        // Booking + Stripe Checkout
        document.getElementById('bookingForm').addEventListener('submit', async (e) => {
            e.preventDefault();

            const eventId = parseInt(document.getElementById('EventID').value);
            const quantity = parseInt(document.getElementById('Quantity').value);

            try {
                // Step 1: Create booking
                const bookingResponse = await fetch('/BookEvent/Book', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ eventId: eventId, quantity: quantity })
                });

                const bookingData = await bookingResponse.json();

                if (bookingData.success) {
                    // Step 2: Create Stripe session
                    const stripeResponse = await fetch(`/payment/create-checkout-session?bookingId=${bookingData.bookingId}`, {
                        method: 'POST'
                    });

                    const sessionData = await stripeResponse.json();

                    if (sessionData.id) {
                        const stripe = Stripe('@ViewBag.StripePublicKey');
                        stripe.redirectToCheckout({ sessionId: sessionData.id });
                    } else {
                        alert('Failed to initiate payment. Please try again.');
                    }
                } else {
                    alert(bookingData.message || 'Booking failed');
                }
            } catch (err) {
                console.error(err);
                alert('An error occurred while booking. Please try again.');
            }
        });

                // Fake Discount Code Handling
        document.getElementById('btnApplyDiscount').addEventListener('click', () => {
            const discountMessage = document.getElementById('discountMessage');
            discountMessage.innerHTML = `
                <div class="alert alert-danger p-2 mt-2">
                    ❌ Wrong discount code. Please try again.
                </div>
            `;
        });

    </script>
}
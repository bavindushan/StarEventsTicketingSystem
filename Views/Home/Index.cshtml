@{
    ViewData["Title"] = "Home";
}

<!-- Bootstrap & FontAwesome -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">
<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>

<style>
    /* Reset */
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    body {
        background: linear-gradient(45deg, #0f0f23, #1a1a2e, #16213e);
        min-height: 100vh;
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        overflow-x: hidden;
    }

    /* Three.js Canvas */
    #three-canvas {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        z-index: -1;
        opacity: 0.7;
    }

    /* Glass Cards */
    .glass-card {
        background: linear-gradient(135deg, rgba(255,255,255,0.12), rgba(255,255,255,0.08));
        backdrop-filter: blur(20px);
        border-radius: 24px;
        border: 1px solid rgba(255,255,255,0.18);
        box-shadow: 0 8px 32px rgba(0,0,0,0.3), inset 0 1px 0 rgba(255,255,255,0.2);
        transition: all 0.4s cubic-bezier(0.25,0.46,0.45,0.94);
        position: relative;
        overflow: hidden;
    }

        .glass-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.1), transparent);
            transition: left 0.5s;
        }

        .glass-card:hover::before {
            left: 100%;
        }

        .glass-card:hover {
            transform: translateY(-12px) scale(1.02);
            box-shadow: 0 20px 60px rgba(106,17,203,0.4), inset 0 1px 0 rgba(255,255,255,0.3);
        }

    /* Hero Section */
    .hero-section {
        background: linear-gradient(135deg, rgba(106,17,203,0.9), rgba(37,117,252,0.8), rgba(255,0,150,0.7));
        color: white;
        padding: 120px 0;
        border-radius: 30px;
        margin: 20px;
        position: relative;
        overflow: hidden;
        text-align: center;
    }

        .hero-section::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: radial-gradient(circle, rgba(255,255,255,0.1) 0%, transparent 50%);
            animation: heroGlow 8s ease-in-out infinite;
        }

    @@keyframes heroGlow {
        0%, 100% {
            transform: translate(-50%, -50%) scale(1);
        }

        50% {
            transform: translate(-50%, -50%) scale(1.1);
        }
    }

    .hero-title {
        font-size: 4rem;
        font-weight: 800;
        background: linear-gradient(45deg, #ffffff, #ff6b6b, #4ecdc4);
        background-size: 200% 200%;
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        animation: titleGradient 3s ease-in-out infinite;
    }

    @@keyframes titleGradient {
        0%, 100% {
            background-position: 0% 50%;
        }

        50% {
            background-position: 100% 50%;
        }
    }

    /* Floating Elements */
    .floating-element {
        position: absolute;
        width: 60px;
        height: 60px;
        background: linear-gradient(45deg, rgba(255,255,255,0.1), rgba(106,17,203,0.2));
        border-radius: 50%;
        animation: float 6s ease-in-out infinite;
    }

    @@keyframes float {
        0%, 100% {
            transform: translateY(0px) rotate(0deg);
        }

        50% {
            transform: translateY(-20px) rotate(180deg);
        }
    }

    .floating-element:nth-child(1) {
        top: 10%;
        left: 5%;
        animation-delay: 0s;
    }

    .floating-element:nth-child(2) {
        top: 20%;
        right: 10%;
        animation-delay: 2s;
    }

    .floating-element:nth-child(3) {
        bottom: 30%;
        left: 8%;
        animation-delay: 4s;
    }

    /* Event Cards */
    .event-card {
        height: 100%;
        transition: all 0.4s ease;
        cursor: pointer;
    }

    .event-img {
        border-radius: 24px 24px 0 0;
        object-fit: cover;
        height: 250px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 3rem;
        color: white;
        background: linear-gradient(45deg, #667eea 0%, #764ba2 100%);
        transition: transform 0.4s ease;
    }

    .event-card:hover .event-img {
        transform: scale(1.05);
    }

    /* Buttons */
    .btn-premium {
        background: linear-gradient(45deg, #667eea, #764ba2);
        border: none;
        padding: 12px 30px;
        border-radius: 50px;
        color: white;
        font-weight: 600;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

        .btn-premium::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
            transition: left 0.5s;
        }

        .btn-premium:hover::before {
            left: 100%;
        }

        .btn-premium:hover {
            transform: scale(1.05);
            box-shadow: 0 10px 30px rgba(102,126,234,0.4);
        }

    /* Quick Links */
    .quick-link-btn {
        background: linear-gradient(135deg, rgba(255,255,255,0.1), rgba(255,255,255,0.05));
        backdrop-filter: blur(10px);
        color: #fff;
        border: 1px solid rgba(255,255,255,0.2);
        padding: 15px 25px;
        border-radius: 20px;
        transition: all 0.3s ease;
        position: relative;
        overflow: hidden;
    }

        .quick-link-btn:hover {
            background: linear-gradient(135deg, rgba(255,255,255,0.2), rgba(106,17,203,0.3));
            transform: translateY(-3px);
            box-shadow: 0 15px 40px rgba(106,17,203,0.3);
        }

    /* Fade-in animations */
    .fade-in {
        opacity: 0;
        transform: translateY(30px);
        animation: fadeInUp 1s ease forwards;
    }

    @@keyframes fadeInUp {
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .stagger-1 {
        animation-delay: 0.1s;
    }

    .stagger-2 {
        animation-delay: 0.2s;
    }

    .stagger-3 {
        animation-delay: 0.3s;
    }
</style>

<!-- Three.js Canvas -->
<canvas id="three-canvas"></canvas>

<div class="container-fluid px-0">
    <!-- Hero Section -->
    <section class="hero-section">
        <div class="floating-element"></div>
        <div class="floating-element"></div>
        <div class="floating-element"></div>

        <div class="hero-content">
            <h1 class="hero-title fade-in">Welcome to Star Events</h1>
            <p class="lead mb-4 fade-in stagger-1">Discover extraordinary experiences in immersive reality</p>
            <button class="btn btn-premium btn-lg fade-in stagger-2">Explore Events</button>
        </div>
    </section>

    <!-- Upcoming Events -->
    <section class="py-5">
        <div class="container">
            <h2 class="fw-bold mb-5 text-center text-white fade-in">
                <i class=" me-3" style="color:#667eea;"></i>Upcoming Events
            </h2>
            <div class="row g-4">
                <div class="col-lg-4 col-md-6 fade-in stagger-1">
                    <div class="glass-card event-card">
                        <div class="event-img"><i class="fas fa-music"></i></div>
                        <div class="card-body text-center">
                            <h5 class="fw-bold text-white mb-3"><i class="fas fa-microphone me-2" style="color:#ff6b6b;"></i>Music Concert</h5>
                            <p class="text-white-50 mb-4">Experience live performances by world-class artists in stunning 3D audio</p>
                            <button class="btn btn-premium"><i class="fas fa-ticket-alt me-2"></i>Book Now</button>
                        </div>
                    </div>
                </div>

                <div class="col-lg-4 col-md-6 fade-in stagger-2">
                    <div class="glass-card event-card">
                        <div class="event-img"><i class="fas fa-palette"></i></div>
                        <div class="card-body text-center">
                            <h5 class="fw-bold text-white mb-3"><i class="fas fa-paint-brush me-2" style="color:#4ecdc4;"></i>Art Exhibition</h5>
                            <p class="text-white-50 mb-4">Immerse yourself in digital art galleries with augmented reality features</p>
                            <button class="btn btn-premium"><i class="fas fa-ticket-alt me-2"></i>Book Now</button>
                        </div>
                    </div>
                </div>

                <div class="col-lg-4 col-md-6 fade-in stagger-3">
                    <div class="glass-card event-card">
                        <div class="event-img"><i class="fas fa-utensils"></i></div>
                        <div class="card-body text-center">
                            <h5 class="fw-bold text-white mb-3"><i class="fas fa-hamburger me-2" style="color:#ffa726;"></i>Food Festival</h5>
                            <p class="text-white-50 mb-4">Taste global cuisines with interactive cooking demonstrations</p>
                            <button class="btn btn-premium"><i class="fas fa-ticket-alt me-2"></i>Book Now</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Quick Links -->
    <section class="py-5">
        <div class="container text-center">
            <h2 class="fw-bold mb-5 text-white fade-in">
                <i class="fas fa-bolt me-3" style="color:#667eea;"></i>Quick Access
            </h2>
            <div class="d-flex justify-content-center gap-4 flex-wrap fade-in stagger-1">
                <button class="btn quick-link-btn"><i class="fas fa-ticket-alt me-2"></i>Book Tickets</button>
                <button class="btn quick-link-btn"><i class="fas fa-calendar-check me-2"></i>My Bookings</button>
                <button class="btn quick-link-btn"><i class="fas fa-gem me-2"></i>Loyalty Points</button>
                <button class="btn quick-link-btn"><i class="fas fa-percent me-2"></i>Discounts</button>
            </div>
        </div>
    </section>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
<script>
    // Three.js Scene
    const scene = new THREE.Scene();
    const camera = new THREE.PerspectiveCamera(75, window.innerWidth/window.innerHeight, 0.1, 1000);
    const renderer = new THREE.WebGLRenderer({ canvas: document.getElementById('three-canvas'), alpha:true });
    renderer.setSize(window.innerWidth, window.innerHeight);
    renderer.setClearColor(0x000000,0);

    // Particles
    const particlesGeometry = new THREE.BufferGeometry();
    const particlesCount = 2000;
    const posArray = new Float32Array(particlesCount*3);
    for(let i=0;i<particlesCount*3;i++){ posArray[i]=(Math.random()-0.5)*100; }
    particlesGeometry.setAttribute('position', new THREE.BufferAttribute(posArray,3));
    const particlesMaterial = new THREE.PointsMaterial({ size:0.8, color:0x667eea, transparent:true, opacity:0.8 });
    const particlesMesh = new THREE.Points(particlesGeometry, particlesMaterial);
    scene.add(particlesMesh);

    // Floating cubes
    const cubes=[];
    for(let i=0;i<20;i++){
        const cube = new THREE.Mesh(new THREE.BoxGeometry(0.5,0.5,0.5), new THREE.MeshBasicMaterial({
            color: new THREE.Color().setHSL(Math.random(),0.7,0.6), transparent:true, opacity:0.6, wireframe:true
        }));
        cube.position.set((Math.random()-0.5)*50,(Math.random()-0.5)*50,(Math.random()-0.5)*50);
        cube.rotation.set(Math.random()*Math.PI, Math.random()*Math.PI, Math.random()*Math.PI);
        cubes.push(cube);
        scene.add(cube);
    }
    camera.position.z=30;

    function animate(){
        requestAnimationFrame(animate);
        particlesMesh.rotation.x+=0.001;
        particlesMesh.rotation.y+=0.002;
        cubes.forEach((cube,index)=>{
            cube.rotation.x+=0.01*(index%3+1);
            cube.rotation.y+=0.01*(index%2+1);
            cube.position.y+=Math.sin(Date.now()*0.001+index)*0.01;
        });
        renderer.render(scene,camera);
    }
    animate();

    window.addEventListener('resize',()=>{ camera.aspect=window.innerWidth/window.innerHeight; camera.updateProjectionMatrix(); renderer.setSize(window.innerWidth, window.innerHeight); });

    // Fade-in animation on load
    window.addEventListener('load', ()=>{
        document.querySelectorAll('.fade-in').forEach((el,index)=>{
            setTimeout(()=>{ el.style.opacity='1'; el.style.transform='translateY(0)'; }, index*100);
        });
    });
</script>
